services:
  postgres:
    image: postgres:17-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER:${POSTGRES_USER}
      - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
      - POSTGRES_DB:${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT_DOCKER}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dulpo_network

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT_DOCKER}"
    networks:
      - dulpo_network
  app:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    env_file:
      - .env
    environment:
      - MONGO_URL=${MONGO_URL}
      - POSTGRES_URL=${POSTGRES_URL}
    command: npm run start:dev
    ports:
      - "${APP_PORT}:3000"
    depends_on:
      - postgres
      - mongo
    networks:
      - dulpo_network

volumes:
  postgres_data:
  mongo_data:


networks:
  dulpo_network:
